ccc_path = """/Volumes/Data/ddunbar/llvm.install/bin/ccc"""
ccc_clang = """/Volumes/Data/ddunbar/zorg/xcb_scripts/cc/xcc.fb"""
ccc_gcc = """/Volumes/Data/ddunbar/zorg/xcb_scripts/cc/xcc.fb -ccc-no-clang"""
gcc = """/usr/bin/gcc-4.2"""
ccc_clang_info = """
ccc version 1.0 (https://ddunbar@llvm.org/svn/llvm-project/cfe/trunk)
 "/Volumes/Data/ddunbar/llvm.install/bin/clang" "-S" "-disable-free" "--relocation-model=pic" "--disable-fp-elim" "--nozero-initialized-in-bss" "--unwind-tables=1" "--mcpu=core2" "--fmath-errno=0" "-mmacosx-version-min=10.6.0" "-arch" "x86_64" "-o" "/tmp/tmp62ee6x.s" "-x" "c" "/dev/null"
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/as" "-arch" "x86_64" "-force_cpusubtype_ALL" "-o" "/tmp/tmpyLxO26.o" "/tmp/tmp62ee6x.s"
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/collect2" "-dynamic" "-arch" "x86_64" "-macosx_version_min" "10.6.0" "-weak_reference_mismatches" "non-weak" "-o" "a.out" "-lcrt1.10.5.o" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/x86_64" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/x86_64" "-L/usr/lib/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/../../../i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/../../.." "/tmp/tmpyLxO26.o" "-lgcc_s.10.5" "-lgcc" "-lSystem"
"""
ccc_gcc_info = """
ccc version 1.0 (https://ddunbar@llvm.org/svn/llvm-project/cfe/trunk)
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/cc1" "-quiet" "-imultilib" "x86_64" "-D__DYNAMIC__" "/dev/null" "-fPIC" "-quiet" "-dumpbase" "null" "-mmacosx-version-min=10.6.0" "-m64" "-mtune=core2" "-auxbase" "null" "-o" "/tmp/tmpDx0Rtr.s"
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/as" "-arch" "x86_64" "-force_cpusubtype_ALL" "-o" "/tmp/tmpNbvYrM.o" "/tmp/tmpDx0Rtr.s"
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/collect2" "-dynamic" "-arch" "x86_64" "-macosx_version_min" "10.6.0" "-weak_reference_mismatches" "non-weak" "-o" "a.out" "-lcrt1.10.5.o" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/x86_64" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/x86_64" "-L/usr/lib/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/../../../i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/../../.." "/tmp/tmpNbvYrM.o" "-lgcc_s.10.5" "-lgcc" "-lSystem"
"""
gcc_info = """
Using built-in specs.
Target: i686-apple-darwin10
Configured with: /var/tmp/gcc/gcc-5641~3/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/share/man --enable-languages=c,objc,c++,obj-c++ --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-slibdir=/usr/lib --build=i686-apple-darwin10 --with-gxx-include-dir=/include/c++/4.2.1 --program-prefix=i686-apple-darwin10- --host=x86_64-apple-darwin10 --target=i686-apple-darwin10
Thread model: posix
gcc version 4.2.1 (Apple Inc. build 5641)
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/cc1" "-quiet" "-imultilib" "x86_64" "-D__DYNAMIC__" "/dev/null" "-fPIC" "-quiet" "-dumpbase" "null" "-mmacosx-version-min=10.6.0" "-m64" "-mtune=core2" "-auxbase" "null" "-o" "/var/tmp//ccDnCoVC.s"
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/as" "-arch" "x86_64" "-force_cpusubtype_ALL" "-o" "/var/tmp//ccwsOXBR.o" "/var/tmp//ccDnCoVC.s"
 "/usr/libexec/gcc/i686-apple-darwin10/4.2.1/collect2" "-dynamic" "-arch" "x86_64" "-macosx_version_min" "10.6.0" "-weak_reference_mismatches" "non-weak" "-o" "a.out" "-lcrt1.10.6.o" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/x86_64" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/x86_64" "-L/usr/lib/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/../../../i686-apple-darwin10/4.2.1" "-L/usr/lib/gcc/i686-apple-darwin10/4.2.1/../../.." "/var/tmp//ccwsOXBR.o" "-lgcc" "-lSystem"
"""
style = """make"""
runs = []
runs.append(( { 'cc':"ccc_clang",
                'script':"null",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.041626, 0.067272, 0.122191),
	(1, 0.041643, 0.067045, 0.122192),
	(2, 0.041655, 0.067055, 0.121649),
	(3, 0.041562, 0.066648, 0.121432),
	(4, 0.041613, 0.066810, 0.121305),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"null",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.041606, 0.066993, 0.121704),
	(1, 0.041581, 0.066630, 0.121471),
	(2, 0.041602, 0.066922, 0.121765),
	(3, 0.041581, 0.066859, 0.121405),
	(4, 0.041689, 0.066980, 0.124326),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"null",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.041675, 0.067138, 0.121728),
	(1, 0.041612, 0.066859, 0.121205),
	(2, 0.041580, 0.066483, 0.120964),
	(3, 0.041594, 0.066483, 0.120985),
	(4, 0.041568, 0.066532, 0.120499),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"###",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.186639, 1.937014, 4.437061),
	(1, 2.186681, 1.945610, 4.433872),
	(2, 2.188041, 1.947231, 4.462319),
	(3, 2.188190, 1.943516, 4.470365),
	(4, 2.187020, 1.950682, 4.436890),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"###",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.195748, 1.947951, 4.443053),
	(1, 2.194402, 1.940449, 4.432535),
	(2, 2.195423, 1.943498, 4.447053),
	(3, 2.196253, 1.950332, 4.448664),
	(4, 2.195660, 1.942226, 4.437071),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"###",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.136111, 0.313413, 0.499384),
	(1, 0.136203, 0.313310, 0.500697),
	(2, 0.136639, 0.314917, 0.558877),
	(3, 0.136173, 0.313843, 0.501008),
	(4, 0.135965, 0.312723, 0.498594),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"cpp",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.819676, 2.374582, 5.801642),
	(1, 2.819568, 2.375962, 5.525720),
	(2, 2.819725, 2.377977, 5.526612),
	(3, 2.819563, 2.374766, 5.525245),
	(4, 2.820020, 2.378179, 5.531853),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"parse",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.979842, 2.393759, 5.773241),
	(1, 2.978360, 2.388217, 5.699588),
	(2, 2.979615, 2.392749, 5.713015),
	(3, 2.978055, 2.388861, 5.697303),
	(4, 2.979260, 2.390138, 5.710568),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"syntax",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.525414, 2.495433, 6.457547),
	(1, 3.523990, 2.498728, 6.378505),
	(2, 3.523183, 2.492712, 6.370535),
	(3, 3.523363, 2.494413, 6.376960),
	(4, 3.525216, 2.501657, 6.413753),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"syntax",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 6.143927, 2.857721, 9.407785),
	(1, 6.144766, 2.871091, 9.396498),
	(2, 6.143893, 2.860256, 9.392155),
	(3, 6.146454, 2.866420, 9.447510),
	(4, 6.146771, 2.864488, 9.664806),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"syntax",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.975961, 1.044303, 5.199328),
	(1, 3.976843, 1.044060, 5.209434),
	(2, 3.976622, 1.043787, 5.223585),
	(3, 3.975836, 1.043403, 5.198575),
	(4, 3.975980, 1.035674, 5.196275),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"irgen",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 5.707728, 2.859466, 9.115580),
	(1, 5.709064, 2.858221, 9.094858),
	(2, 5.707868, 2.868881, 9.006296),
	(3, 5.706836, 2.856589, 8.998487),
	(4, 5.706603, 2.857047, 9.028045),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_asm",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 7.855523, 3.041195, 11.679531),
	(1, 7.855184, 3.046897, 11.389012),
	(2, 7.855530, 3.039149, 11.435265),
	(3, 7.856299, 3.037483, 11.382391),
	(4, 7.854147, 3.043133, 11.373174),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_asm",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.926280, 3.168833, 14.542014),
	(1, 10.931726, 3.174573, 14.573554),
	(2, 10.933809, 3.163183, 14.857843),
	(3, 10.927966, 3.164824, 14.543822),
	(4, 10.927423, 3.166222, 14.658131),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_asm",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 8.755856, 1.342961, 10.311273),
	(1, 8.756782, 1.346296, 10.314137),
	(2, 8.760167, 1.338744, 10.442545),
	(3, 8.759031, 1.346241, 10.333765),
	(4, 8.758174, 1.339294, 10.328992),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_compile",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.159773, 3.431851, 13.319311),
	(1, 9.156190, 3.421113, 13.203571),
	(2, 9.157752, 3.417859, 13.220865),
	(3, 9.156178, 3.413504, 13.204341),
	(4, 9.150167, 3.412242, 13.252471),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_compile",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 12.062994, 3.497204, 16.184210),
	(1, 12.065757, 3.486858, 16.503552),
	(2, 12.063830, 3.499430, 16.171503),
	(3, 12.065427, 3.500838, 16.268848),
	(4, 12.063384, 3.503007, 16.164980),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_compile",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.836694, 1.570806, 11.863629),
	(1, 9.835162, 1.580921, 11.762224),
	(2, 9.836416, 1.572111, 11.893337),
	(3, 9.835066, 1.571860, 11.751330),
	(4, 9.836771, 1.575158, 11.783299),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"all",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.262905, 3.437217, 13.459870),
	(1, 9.262539, 3.446216, 13.349994),
	(2, 9.260750, 3.445077, 13.357125),
	(3, 9.263932, 3.448647, 13.366228),
	(4, 9.258133, 3.443125, 13.369278),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"all",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 12.163348, 3.513017, 16.559292),
	(1, 12.159476, 3.526493, 16.430252),
	(2, 12.157784, 3.513763, 16.306505),
	(3, 12.159307, 3.530832, 16.495815),
	(4, 12.160843, 3.516564, 16.331499),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"all",
                'threads':"1",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.945925, 1.592199, 11.971326),
	(1, 9.944375, 1.603629, 11.899797),
	(2, 9.945863, 1.601172, 11.917642),
	(3, 9.946878, 1.601530, 12.113196),
	(4, 9.943168, 1.596300, 11.910257),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"null",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.042234, 0.072110, 0.068216),
	(1, 0.042155, 0.071582, 0.067917),
	(2, 0.042120, 0.071280, 0.067838),
	(3, 0.042134, 0.071281, 0.067688),
	(4, 0.042182, 0.071185, 0.068571),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"null",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.042195, 0.072394, 0.067753),
	(1, 0.042154, 0.071378, 0.067667),
	(2, 0.042126, 0.071503, 0.067645),
	(3, 0.042142, 0.071525, 0.067641),
	(4, 0.042137, 0.071263, 0.067512),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"null",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.042117, 0.071863, 0.067866),
	(1, 0.042095, 0.071587, 0.067778),
	(2, 0.042123, 0.071824, 0.067718),
	(3, 0.042017, 0.071448, 0.067336),
	(4, 0.042098, 0.071669, 0.067649),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"###",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.312764, 2.250083, 2.579668),
	(1, 2.313524, 2.255599, 2.581617),
	(2, 2.314576, 2.236269, 2.751308),
	(3, 2.313798, 2.247632, 2.576000),
	(4, 2.308146, 2.127675, 2.449384),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"###",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.319161, 2.248583, 2.579843),
	(1, 2.320569, 2.254949, 2.582595),
	(2, 2.319615, 2.254838, 2.582868),
	(3, 2.317640, 2.234440, 2.566378),
	(4, 2.319468, 2.253768, 2.582185),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"###",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.138760, 0.342468, 0.274713),
	(1, 0.138529, 0.338083, 0.270603),
	(2, 0.138419, 0.339997, 0.272035),
	(3, 0.138474, 0.339942, 0.271676),
	(4, 0.138476, 0.339545, 0.271208),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"cpp",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.927601, 2.621882, 3.040263),
	(1, 2.928817, 2.618327, 3.042979),
	(2, 2.925842, 2.616328, 3.034669),
	(3, 2.933845, 2.642455, 3.077028),
	(4, 2.947212, 2.620121, 3.167388),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"parse",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.095391, 2.632837, 3.130378),
	(1, 3.096120, 2.626309, 3.120448),
	(2, 3.095708, 2.622912, 3.125333),
	(3, 3.096435, 2.628234, 3.124718),
	(4, 3.095836, 2.623590, 3.124194),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"syntax",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.674570, 2.716479, 3.444615),
	(1, 3.673243, 2.720120, 3.443432),
	(2, 3.673080, 2.709820, 3.443546),
	(3, 3.673200, 2.709185, 3.426130),
	(4, 3.670534, 2.711744, 3.427015),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"syntax",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 6.389665, 3.072630, 4.983543),
	(1, 6.385878, 3.080763, 4.975980),
	(2, 6.389956, 3.069652, 4.982242),
	(3, 6.388396, 3.078156, 4.977871),
	(4, 6.391305, 3.090905, 4.994381),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"syntax",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 4.079359, 1.112710, 2.692685),
	(1, 4.077052, 1.114109, 2.689234),
	(2, 4.078218, 1.119202, 2.693919),
	(3, 4.077124, 1.108491, 2.690559),
	(4, 4.077296, 1.112142, 2.684408),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"irgen",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 6.043907, 3.082369, 4.874229),
	(1, 6.044110, 3.072240, 4.860724),
	(2, 6.049991, 3.085666, 4.927778),
	(3, 6.050681, 3.087747, 4.866959),
	(4, 6.046383, 3.081174, 4.865700),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_asm",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 8.277376, 3.241075, 6.041627),
	(1, 8.274767, 3.246052, 6.032635),
	(2, 8.273632, 3.240323, 6.034355),
	(3, 8.283322, 3.235898, 6.055232),
	(4, 8.279572, 3.237813, 6.040545),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_asm",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 11.267468, 3.368598, 7.582008),
	(1, 11.264991, 3.356817, 7.573902),
	(2, 11.258736, 3.371794, 7.616322),
	(3, 11.272174, 3.375177, 7.750662),
	(4, 11.265369, 3.355828, 7.569228),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_asm",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 8.948892, 1.408841, 5.346675),
	(1, 8.947425, 1.388794, 5.341078),
	(2, 8.959290, 1.397633, 5.703015),
	(3, 8.948915, 1.391639, 5.351654),
	(4, 8.946706, 1.404458, 5.345449),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_compile",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.576401, 3.659016, 6.972346),
	(1, 9.577255, 3.641158, 6.953448),
	(2, 9.572443, 3.647954, 7.051130),
	(3, 9.571615, 3.646782, 6.956555),
	(4, 9.572963, 3.653229, 6.957711),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_compile",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 12.425333, 3.720605, 8.468826),
	(1, 12.420657, 3.729020, 8.648778),
	(2, 12.424221, 3.709511, 8.467562),
	(3, 12.425595, 3.726297, 8.449276),
	(4, 12.422584, 3.718660, 8.713483),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_compile",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.042865, 1.647364, 6.147098),
	(1, 10.038624, 1.646965, 6.107788),
	(2, 10.036193, 1.643319, 6.100944),
	(3, 10.037764, 1.637319, 6.121365),
	(4, 10.044532, 1.648919, 6.354301),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"all",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.686781, 3.657538, 7.098294),
	(1, 9.679355, 3.674326, 7.109849),
	(2, 9.678938, 3.659032, 7.093127),
	(3, 9.683371, 3.655282, 7.396885),
	(4, 9.677578, 3.661111, 7.086666),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"all",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 12.511083, 3.753316, 8.574587),
	(1, 12.517391, 3.745202, 8.579089),
	(2, 12.515167, 3.747517, 8.906780),
	(3, 12.510503, 3.744116, 8.561728),
	(4, 12.516263, 3.740046, 8.578455),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"all",
                'threads':"2",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.139224, 1.659640, 6.213839),
	(1, 10.144829, 1.668260, 6.423697),
	(2, 10.144182, 1.670476, 6.213931),
	(3, 10.144068, 1.658834, 6.211693),
	(4, 10.138223, 1.667654, 6.222308),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"null",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.044057, 0.093485, 0.045956),
	(1, 0.044004, 0.092769, 0.045605),
	(2, 0.043901, 0.092551, 0.045247),
	(3, 0.043818, 0.091785, 0.045295),
	(4, 0.043924, 0.091899, 0.045216),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"null",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.043938, 0.092531, 0.045317),
	(1, 0.043985, 0.092990, 0.045413),
	(2, 0.043847, 0.091943, 0.044986),
	(3, 0.043889, 0.091626, 0.045207),
	(4, 0.043936, 0.091446, 0.045068),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"null",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.043935, 0.092137, 0.045550),
	(1, 0.044036, 0.092432, 0.045443),
	(2, 0.043907, 0.092597, 0.045207),
	(3, 0.043906, 0.092773, 0.045220),
	(4, 0.043932, 0.092273, 0.045162),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"###",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.510229, 2.524326, 1.447378),
	(1, 2.511153, 2.582682, 1.463158),
	(2, 2.509131, 2.551808, 1.443700),
	(3, 2.530506, 2.606601, 1.631594),
	(4, 2.525546, 2.556516, 1.460912),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"###",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.519330, 2.572381, 1.455862),
	(1, 2.519059, 2.662137, 1.521106),
	(2, 2.506144, 2.556738, 1.456221),
	(3, 2.511366, 2.577441, 1.459606),
	(4, 2.526218, 2.553722, 1.574747),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"###",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.147023, 0.430956, 0.176525),
	(1, 0.147430, 0.429136, 0.175834),
	(2, 0.146893, 0.428812, 0.175145),
	(3, 0.147174, 0.429968, 0.175169),
	(4, 0.147492, 0.431385, 0.174682),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"cpp",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.167799, 3.158706, 1.805685),
	(1, 3.167239, 3.135936, 1.802571),
	(2, 3.157960, 3.130196, 1.803330),
	(3, 3.146711, 3.153077, 1.813078),
	(4, 3.149927, 3.152081, 1.801526),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"parse",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.342516, 3.109718, 1.823208),
	(1, 3.353297, 3.103074, 1.819566),
	(2, 3.333260, 3.149734, 1.829796),
	(3, 3.338234, 3.103725, 1.822010),
	(4, 3.336550, 3.100652, 1.832110),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"syntax",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.970523, 3.209725, 1.991844),
	(1, 3.937210, 3.198855, 1.976041),
	(2, 3.955488, 3.206959, 1.989544),
	(3, 3.946574, 3.198149, 1.980601),
	(4, 3.948581, 3.205880, 1.983994),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"syntax",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 6.732216, 3.619584, 2.782476),
	(1, 6.745420, 3.616948, 2.790903),
	(2, 6.750526, 3.594650, 2.790881),
	(3, 6.738845, 3.612443, 2.790569),
	(4, 6.747457, 3.617553, 2.788687),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"syntax",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 4.194680, 1.292044, 1.444048),
	(1, 4.190321, 1.300927, 1.441506),
	(2, 4.198820, 1.293219, 1.444174),
	(3, 4.209445, 1.289162, 1.447259),
	(4, 4.187489, 1.282234, 1.440277),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"irgen",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 6.517757, 3.615464, 2.854763),
	(1, 6.519460, 3.617775, 2.756124),
	(2, 6.498704, 3.602169, 2.756365),
	(3, 6.509982, 3.621462, 2.745702),
	(4, 6.489827, 3.608797, 2.747793),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_asm",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 8.825143, 3.794072, 3.362608),
	(1, 8.824013, 3.765690, 3.355471),
	(2, 8.813541, 3.783641, 3.357039),
	(3, 8.786371, 3.786659, 3.345793),
	(4, 8.772730, 3.771638, 3.454307),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_asm",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 11.738484, 3.836784, 4.120546),
	(1, 11.739288, 3.848616, 4.125808),
	(2, 11.738261, 3.837534, 4.136642),
	(3, 11.735003, 3.844597, 4.120444),
	(4, 11.761638, 3.862457, 4.145417),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_asm",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.155087, 1.561075, 2.833868),
	(1, 9.154934, 1.538791, 2.833134),
	(2, 9.183035, 1.553281, 2.902132),
	(3, 9.151130, 1.546822, 2.879777),
	(4, 9.151844, 1.542450, 2.825560),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_compile",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.166988, 4.242308, 3.894601),
	(1, 10.218686, 4.265537, 3.896997),
	(2, 10.208211, 4.256174, 3.905990),
	(3, 10.182169, 4.254989, 4.094963),
	(4, 10.165336, 4.239672, 3.873703),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_compile",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 12.960833, 4.319633, 4.628599),
	(1, 12.997509, 4.323695, 4.942418),
	(2, 12.940625, 4.326994, 4.624419),
	(3, 12.947641, 4.300034, 4.597456),
	(4, 12.942562, 4.308688, 4.619190),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_compile",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.300396, 1.823967, 3.250894),
	(1, 10.305252, 1.822285, 3.244746),
	(2, 10.307011, 1.845773, 3.260861),
	(3, 10.319953, 1.831435, 3.500671),
	(4, 10.320805, 1.834782, 3.246639),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"all",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.297812, 4.264184, 4.013061),
	(1, 10.315407, 4.293257, 4.021099),
	(2, 10.257966, 4.265659, 4.006248),
	(3, 10.307857, 4.273741, 4.044614),
	(4, 10.273398, 4.260286, 4.216469),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"all",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 13.040233, 4.302015, 4.719135),
	(1, 13.046999, 4.316412, 5.773880),
	(2, 13.081143, 4.324329, 4.745519),
	(3, 13.025611, 4.311093, 4.738916),
	(4, 13.063041, 4.336277, 4.771969),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"all",
                'threads':"4",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.419745, 1.855515, 3.343652),
	(1, 10.447391, 1.858839, 3.374031),
	(2, 10.428436, 1.866242, 3.381289),
	(3, 10.428931, 1.879273, 3.582034),
	(4, 10.410715, 1.836761, 3.371333),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"null",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.044629, 0.104236, 0.047124),
	(1, 0.044357, 0.101072, 0.046054),
	(2, 0.044261, 0.099350, 0.045512),
	(3, 0.044279, 0.099032, 0.045401),
	(4, 0.044291, 0.098233, 0.045262),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"null",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.044388, 0.101047, 0.045972),
	(1, 0.044267, 0.100816, 0.045836),
	(2, 0.044319, 0.100931, 0.045829),
	(3, 0.044242, 0.102208, 0.046286),
	(4, 0.044197, 0.101894, 0.046310),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"null",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.044199, 0.099476, 0.045336),
	(1, 0.044064, 0.099032, 0.045431),
	(2, 0.044081, 0.097169, 0.044910),
	(3, 0.044055, 0.099088, 0.044957),
	(4, 0.044322, 0.099454, 0.045563),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"###",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.768949, 3.566605, 1.008622),
	(1, 2.753933, 3.515221, 1.011067),
	(2, 2.790210, 3.581213, 1.006835),
	(3, 2.742393, 3.612996, 1.065939),
	(4, 2.783563, 3.457715, 0.977203),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"###",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 2.803126, 3.542212, 1.140376),
	(1, 2.794538, 3.523127, 1.000266),
	(2, 2.821545, 3.533185, 0.996633),
	(3, 2.754702, 3.604113, 1.127400),
	(4, 2.773800, 3.590831, 1.023085),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"###",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 0.162694, 0.629660, 0.131824),
	(1, 0.162231, 0.630903, 0.131937),
	(2, 0.162713, 0.636833, 0.133010),
	(3, 0.163527, 0.627696, 0.130973),
	(4, 0.162591, 0.628073, 0.128269),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"cpp",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.398995, 4.386961, 1.222372),
	(1, 3.433913, 4.302404, 1.191109),
	(2, 3.403972, 4.249079, 1.179600),
	(3, 3.430418, 4.241026, 1.173406),
	(4, 3.405708, 4.295249, 1.192367),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"parse",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 3.589608, 4.234909, 1.206952),
	(1, 3.595580, 4.250801, 1.195809),
	(2, 3.598782, 4.186360, 1.189533),
	(3, 3.576135, 4.210771, 1.192198),
	(4, 3.596508, 4.272774, 1.195682),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"syntax",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 4.188318, 4.323380, 1.272841),
	(1, 4.204432, 4.301331, 1.276169),
	(2, 4.232123, 4.359346, 1.308850),
	(3, 4.254709, 4.295013, 1.277959),
	(4, 4.214074, 4.293825, 1.275462),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"syntax",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 7.056727, 4.672983, 1.677022),
	(1, 7.064183, 4.697158, 1.685536),
	(2, 7.013256, 4.653804, 1.669026),
	(3, 7.077917, 4.720479, 1.692836),
	(4, 7.028864, 4.654591, 1.674130),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"syntax",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 4.250811, 1.598520, 0.822128),
	(1, 4.255341, 1.616523, 0.819562),
	(2, 4.282720, 1.628032, 0.823764),
	(3, 4.296236, 1.628292, 0.828753),
	(4, 4.263254, 1.614337, 0.822968),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"irgen",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 6.828563, 4.698920, 1.665128),
	(1, 6.887088, 4.678607, 1.660858),
	(2, 6.867776, 4.703203, 1.657673),
	(3, 6.841523, 4.645255, 1.637169),
	(4, 6.904172, 4.682556, 1.690968),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_asm",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.164624, 4.728257, 2.026243),
	(1, 9.258789, 4.757386, 1.996115),
	(2, 9.215979, 4.740186, 1.995604),
	(3, 9.241390, 4.750833, 2.007054),
	(4, 9.161773, 4.742841, 1.987729),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_asm",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 12.113609, 4.726450, 2.385739),
	(1, 12.121322, 4.784194, 2.416434),
	(2, 12.095256, 4.762198, 2.394130),
	(3, 12.125848, 4.743744, 2.386863),
	(4, 12.117883, 4.759723, 2.384746),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_asm",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 9.196017, 1.794764, 1.538604),
	(1, 9.293693, 1.830825, 1.559088),
	(2, 9.210498, 1.813935, 1.538989),
	(3, 9.207860, 1.799598, 1.536893),
	(4, 9.202729, 1.797648, 1.530905),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"only_compile",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.574802, 5.298921, 2.539728),
	(1, 10.657320, 5.376201, 2.329437),
	(2, 10.650595, 5.345177, 2.311878),
	(3, 10.611628, 5.366770, 2.319432),
	(4, 10.599574, 5.358888, 2.479782),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"only_compile",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 13.432160, 5.417611, 2.691172),
	(1, 13.443341, 5.377409, 2.678012),
	(2, 13.343336, 5.338212, 2.812471),
	(3, 13.333183, 5.333529, 2.687594),
	(4, 13.384371, 5.414969, 2.837339),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"only_compile",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.381974, 2.152140, 1.786428),
	(1, 10.378996, 2.143003, 1.774503),
	(2, 10.453921, 2.187323, 1.794154),
	(3, 10.398109, 2.212740, 2.013101),
	(4, 10.435604, 2.197729, 1.779200),
]}
))
runs.append(( { 'cc':"ccc_clang",
                'script':"all",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.786656, 5.383657, 2.435159),
	(1, 10.689933, 5.362047, 2.435158),
	(2, 10.761754, 5.406655, 2.462640),
	(3, 10.760319, 5.401706, 2.571526),
	(4, 10.666932, 5.361587, 2.444485),
]}
))
runs.append(( { 'cc':"ccc_gcc",
                'script':"all",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 13.519919, 5.421898, 2.821722),
	(1, 13.447262, 5.364940, 2.926024),
	(2, 13.464838, 5.369476, 2.802961),
	(3, 13.514555, 5.440290, 2.831226),
	(4, 13.443975, 5.410124, 2.947296),
]}
))
runs.append(( { 'cc':"gcc",
                'script':"all",
                'threads':"8",
                'pch':"no_pch" }, 
{ 'version' : 0,
  'samples' : [
	(0, 10.498388, 2.171118, 2.153460),
	(1, 10.524313, 2.175829, 1.899075),
	(2, 10.502688, 2.185754, 1.894639),
	(3, 10.498667, 2.201617, 1.888811),
	(4, 10.488970, 2.166527, 1.885400),
]}
))
